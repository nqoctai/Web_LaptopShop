#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web_Laptopshop.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_SanPhamCongNghe")]
	public partial class DBConnectDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBaoHanh(BaoHanh instance);
    partial void UpdateBaoHanh(BaoHanh instance);
    partial void DeleteBaoHanh(BaoHanh instance);
    partial void InsertDanhGia(DanhGia instance);
    partial void UpdateDanhGia(DanhGia instance);
    partial void DeleteDanhGia(DanhGia instance);
    partial void InsertChiTietDonHang(ChiTietDonHang instance);
    partial void UpdateChiTietDonHang(ChiTietDonHang instance);
    partial void DeleteChiTietDonHang(ChiTietDonHang instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertHinhAnhSanPham(HinhAnhSanPham instance);
    partial void UpdateHinhAnhSanPham(HinhAnhSanPham instance);
    partial void DeleteHinhAnhSanPham(HinhAnhSanPham instance);
    partial void InsertKhuyenMai(KhuyenMai instance);
    partial void UpdateKhuyenMai(KhuyenMai instance);
    partial void DeleteKhuyenMai(KhuyenMai instance);
    partial void InsertLinhKien(LinhKien instance);
    partial void UpdateLinhKien(LinhKien instance);
    partial void DeleteLinhKien(LinhKien instance);
    partial void InsertLoaiSanPham(LoaiSanPham instance);
    partial void UpdateLoaiSanPham(LoaiSanPham instance);
    partial void DeleteLoaiSanPham(LoaiSanPham instance);
    partial void InsertMoTa(MoTa instance);
    partial void UpdateMoTa(MoTa instance);
    partial void DeleteMoTa(MoTa instance);
    partial void InsertMoTaSanPham(MoTaSanPham instance);
    partial void UpdateMoTaSanPham(MoTaSanPham instance);
    partial void DeleteMoTaSanPham(MoTaSanPham instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertPhanKhuc(PhanKhuc instance);
    partial void UpdatePhanKhuc(PhanKhuc instance);
    partial void DeletePhanKhuc(PhanKhuc instance);
    partial void InsertQuanTriVien(QuanTriVien instance);
    partial void UpdateQuanTriVien(QuanTriVien instance);
    partial void DeleteQuanTriVien(QuanTriVien instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertSanPhamYeuThich(SanPhamYeuThich instance);
    partial void UpdateSanPhamYeuThich(SanPhamYeuThich instance);
    partial void DeleteSanPhamYeuThich(SanPhamYeuThich instance);
    partial void InsertThuongHieu(ThuongHieu instance);
    partial void UpdateThuongHieu(ThuongHieu instance);
    partial void DeleteThuongHieu(ThuongHieu instance);
    partial void InsertThanhToan(ThanhToan instance);
    partial void UpdateThanhToan(ThanhToan instance);
    partial void DeleteThanhToan(ThanhToan instance);
    partial void InsertTinhTrangDonHang(TinhTrangDonHang instance);
    partial void UpdateTinhTrangDonHang(TinhTrangDonHang instance);
    partial void DeleteTinhTrangDonHang(TinhTrangDonHang instance);
    partial void InsertTinhTrangVanChuyen(TinhTrangVanChuyen instance);
    partial void UpdateTinhTrangVanChuyen(TinhTrangVanChuyen instance);
    partial void DeleteTinhTrangVanChuyen(TinhTrangVanChuyen instance);
    partial void InsertTrangThaiDonHang(TrangThaiDonHang instance);
    partial void UpdateTrangThaiDonHang(TrangThaiDonHang instance);
    partial void DeleteTrangThaiDonHang(TrangThaiDonHang instance);
    partial void InsertTrangThaiVanChuyen(TrangThaiVanChuyen instance);
    partial void UpdateTrangThaiVanChuyen(TrangThaiVanChuyen instance);
    partial void DeleteTrangThaiVanChuyen(TrangThaiVanChuyen instance);
    partial void InsertVanChuyen(VanChuyen instance);
    partial void UpdateVanChuyen(VanChuyen instance);
    partial void DeleteVanChuyen(VanChuyen instance);
    #endregion
		
		public DBConnectDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QL_SanPhamCongNgheConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnectDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnectDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnectDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnectDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BaoHanh> BaoHanhs
		{
			get
			{
				return this.GetTable<BaoHanh>();
			}
		}
		
		public System.Data.Linq.Table<DanhGia> DanhGias
		{
			get
			{
				return this.GetTable<DanhGia>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this.GetTable<ChiTietDonHang>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<HinhAnhSanPham> HinhAnhSanPhams
		{
			get
			{
				return this.GetTable<HinhAnhSanPham>();
			}
		}
		
		public System.Data.Linq.Table<KhuyenMai> KhuyenMais
		{
			get
			{
				return this.GetTable<KhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<LinhKien> LinhKiens
		{
			get
			{
				return this.GetTable<LinhKien>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSanPham> LoaiSanPhams
		{
			get
			{
				return this.GetTable<LoaiSanPham>();
			}
		}
		
		public System.Data.Linq.Table<MoTa> MoTas
		{
			get
			{
				return this.GetTable<MoTa>();
			}
		}
		
		public System.Data.Linq.Table<MoTaSanPham> MoTaSanPhams
		{
			get
			{
				return this.GetTable<MoTaSanPham>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<PhanKhuc> PhanKhucs
		{
			get
			{
				return this.GetTable<PhanKhuc>();
			}
		}
		
		public System.Data.Linq.Table<QuanTriVien> QuanTriViens
		{
			get
			{
				return this.GetTable<QuanTriVien>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<SanPhamYeuThich> SanPhamYeuThiches
		{
			get
			{
				return this.GetTable<SanPhamYeuThich>();
			}
		}
		
		public System.Data.Linq.Table<ThuongHieu> ThuongHieus
		{
			get
			{
				return this.GetTable<ThuongHieu>();
			}
		}
		
		public System.Data.Linq.Table<ThanhToan> ThanhToans
		{
			get
			{
				return this.GetTable<ThanhToan>();
			}
		}
		
		public System.Data.Linq.Table<TinhTrangDonHang> TinhTrangDonHangs
		{
			get
			{
				return this.GetTable<TinhTrangDonHang>();
			}
		}
		
		public System.Data.Linq.Table<TinhTrangVanChuyen> TinhTrangVanChuyens
		{
			get
			{
				return this.GetTable<TinhTrangVanChuyen>();
			}
		}
		
		public System.Data.Linq.Table<TrangThaiDonHang> TrangThaiDonHangs
		{
			get
			{
				return this.GetTable<TrangThaiDonHang>();
			}
		}
		
		public System.Data.Linq.Table<TrangThaiVanChuyen> TrangThaiVanChuyens
		{
			get
			{
				return this.GetTable<TrangThaiVanChuyen>();
			}
		}
		
		public System.Data.Linq.Table<VanChuyen> VanChuyens
		{
			get
			{
				return this.GetTable<VanChuyen>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaoHanh")]
	public partial class BaoHanh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _DonHangId;
		
		private long _SanPhamId;
		
		private int _ThoiGianBaoHanh;
		
		private System.DateTime _NgayBatDau;
		
		private System.DateTime _NgayKetThuc;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDonHangIdChanging(long value);
    partial void OnDonHangIdChanged();
    partial void OnSanPhamIdChanging(long value);
    partial void OnSanPhamIdChanged();
    partial void OnThoiGianBaoHanhChanging(int value);
    partial void OnThoiGianBaoHanhChanged();
    partial void OnNgayBatDauChanging(System.DateTime value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.DateTime value);
    partial void OnNgayKetThucChanged();
    #endregion
		
		public BaoHanh()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonHangId", DbType="BigInt NOT NULL")]
		public long DonHangId
		{
			get
			{
				return this._DonHangId;
			}
			set
			{
				if ((this._DonHangId != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonHangIdChanging(value);
					this.SendPropertyChanging();
					this._DonHangId = value;
					this.SendPropertyChanged("DonHangId");
					this.OnDonHangIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamId", DbType="BigInt NOT NULL")]
		public long SanPhamId
		{
			get
			{
				return this._SanPhamId;
			}
			set
			{
				if ((this._SanPhamId != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIdChanging(value);
					this.SendPropertyChanging();
					this._SanPhamId = value;
					this.SendPropertyChanged("SanPhamId");
					this.OnSanPhamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBaoHanh", DbType="Int NOT NULL")]
		public int ThoiGianBaoHanh
		{
			get
			{
				return this._ThoiGianBaoHanh;
			}
			set
			{
				if ((this._ThoiGianBaoHanh != value))
				{
					this.OnThoiGianBaoHanhChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBaoHanh = value;
					this.SendPropertyChanged("ThoiGianBaoHanh");
					this.OnThoiGianBaoHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date NOT NULL")]
		public System.DateTime NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date NOT NULL")]
		public System.DateTime NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_BaoHanh", Storage="_DonHang", ThisKey="DonHangId", OtherKey="Id", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.BaoHanhs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.BaoHanhs.Add(this);
						this._DonHangId = value.Id;
					}
					else
					{
						this._DonHangId = default(long);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BaoHanh", Storage="_SanPham", ThisKey="SanPhamId", OtherKey="Id", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.BaoHanhs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.BaoHanhs.Add(this);
						this._SanPhamId = value.Id;
					}
					else
					{
						this._SanPhamId = default(long);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhGia")]
	public partial class DanhGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _NguoiDungId;
		
		private long _SanPhamId;
		
		private System.Nullable<int> _DiemDanhGia;
		
		private string _BinhLuan;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNguoiDungIdChanging(long value);
    partial void OnNguoiDungIdChanged();
    partial void OnSanPhamIdChanging(long value);
    partial void OnSanPhamIdChanged();
    partial void OnDiemDanhGiaChanging(System.Nullable<int> value);
    partial void OnDiemDanhGiaChanged();
    partial void OnBinhLuanChanging(string value);
    partial void OnBinhLuanChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public DanhGia()
		{
			this._NguoiDung = default(EntityRef<NguoiDung>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDungId", DbType="BigInt NOT NULL")]
		public long NguoiDungId
		{
			get
			{
				return this._NguoiDungId;
			}
			set
			{
				if ((this._NguoiDungId != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiDungIdChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungId = value;
					this.SendPropertyChanged("NguoiDungId");
					this.OnNguoiDungIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamId", DbType="BigInt NOT NULL")]
		public long SanPhamId
		{
			get
			{
				return this._SanPhamId;
			}
			set
			{
				if ((this._SanPhamId != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIdChanging(value);
					this.SendPropertyChanging();
					this._SanPhamId = value;
					this.SendPropertyChanged("SanPhamId");
					this.OnSanPhamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemDanhGia", DbType="Int")]
		public System.Nullable<int> DiemDanhGia
		{
			get
			{
				return this._DiemDanhGia;
			}
			set
			{
				if ((this._DiemDanhGia != value))
				{
					this.OnDiemDanhGiaChanging(value);
					this.SendPropertyChanging();
					this._DiemDanhGia = value;
					this.SendPropertyChanged("DiemDanhGia");
					this.OnDiemDanhGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BinhLuan", DbType="NVarChar(255)")]
		public string BinhLuan
		{
			get
			{
				return this._BinhLuan;
			}
			set
			{
				if ((this._BinhLuan != value))
				{
					this.OnBinhLuanChanging(value);
					this.SendPropertyChanging();
					this._BinhLuan = value;
					this.SendPropertyChanged("BinhLuan");
					this.OnBinhLuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DanhGia", Storage="_NguoiDung", ThisKey="NguoiDungId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.DanhGias.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.DanhGias.Add(this);
						this._NguoiDungId = value.Id;
					}
					else
					{
						this._NguoiDungId = default(long);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_DanhGia", Storage="_SanPham", ThisKey="SanPhamId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.DanhGias.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.DanhGias.Add(this);
						this._SanPhamId = value.Id;
					}
					else
					{
						this._SanPhamId = default(long);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDonHang")]
	public partial class ChiTietDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _DonHangId;
		
		private long _SanPhamId;
		
		private int _SoLuong;
		
		private decimal _Gia;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDonHangIdChanging(long value);
    partial void OnDonHangIdChanged();
    partial void OnSanPhamIdChanging(long value);
    partial void OnSanPhamIdChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnGiaChanging(decimal value);
    partial void OnGiaChanged();
    #endregion
		
		public ChiTietDonHang()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonHangId", DbType="BigInt NOT NULL")]
		public long DonHangId
		{
			get
			{
				return this._DonHangId;
			}
			set
			{
				if ((this._DonHangId != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonHangIdChanging(value);
					this.SendPropertyChanging();
					this._DonHangId = value;
					this.SendPropertyChanged("DonHangId");
					this.OnDonHangIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamId", DbType="BigInt NOT NULL")]
		public long SanPhamId
		{
			get
			{
				return this._SanPhamId;
			}
			set
			{
				if ((this._SanPhamId != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIdChanging(value);
					this.SendPropertyChanging();
					this._SanPhamId = value;
					this.SendPropertyChanged("SanPhamId");
					this.OnSanPhamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(10,2) NOT NULL")]
		public decimal Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_DonHang", ThisKey="DonHangId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._DonHangId = value.Id;
					}
					else
					{
						this._DonHangId = default(long);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDonHang", Storage="_SanPham", ThisKey="SanPhamId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._SanPhamId = value.Id;
					}
					else
					{
						this._SanPhamId = default(long);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _NguoiDungId;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private EntitySet<BaoHanh> _BaoHanhs;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntityRef<ThanhToan> _ThanhToan;
		
		private EntitySet<TrangThaiDonHang> _TrangThaiDonHangs;
		
		private EntityRef<VanChuyen> _VanChuyen;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNguoiDungIdChanging(long value);
    partial void OnNguoiDungIdChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public DonHang()
		{
			this._BaoHanhs = new EntitySet<BaoHanh>(new Action<BaoHanh>(this.attach_BaoHanhs), new Action<BaoHanh>(this.detach_BaoHanhs));
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._ThanhToan = default(EntityRef<ThanhToan>);
			this._TrangThaiDonHangs = new EntitySet<TrangThaiDonHang>(new Action<TrangThaiDonHang>(this.attach_TrangThaiDonHangs), new Action<TrangThaiDonHang>(this.detach_TrangThaiDonHangs));
			this._VanChuyen = default(EntityRef<VanChuyen>);
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDungId", DbType="BigInt NOT NULL")]
		public long NguoiDungId
		{
			get
			{
				return this._NguoiDungId;
			}
			set
			{
				if ((this._NguoiDungId != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiDungIdChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungId = value;
					this.SendPropertyChanged("NguoiDungId");
					this.OnNguoiDungIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_BaoHanh", Storage="_BaoHanhs", ThisKey="Id", OtherKey="DonHangId")]
		public EntitySet<BaoHanh> BaoHanhs
		{
			get
			{
				return this._BaoHanhs;
			}
			set
			{
				this._BaoHanhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="Id", OtherKey="DonHangId")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ThanhToan", Storage="_ThanhToan", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public ThanhToan ThanhToan
		{
			get
			{
				return this._ThanhToan.Entity;
			}
			set
			{
				ThanhToan previousValue = this._ThanhToan.Entity;
				if (((previousValue != value) 
							|| (this._ThanhToan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThanhToan.Entity = null;
						previousValue.DonHang = null;
					}
					this._ThanhToan.Entity = value;
					if ((value != null))
					{
						value.DonHang = this;
					}
					this.SendPropertyChanged("ThanhToan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_TrangThaiDonHang", Storage="_TrangThaiDonHangs", ThisKey="Id", OtherKey="DonHangId")]
		public EntitySet<TrangThaiDonHang> TrangThaiDonHangs
		{
			get
			{
				return this._TrangThaiDonHangs;
			}
			set
			{
				this._TrangThaiDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_VanChuyen", Storage="_VanChuyen", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public VanChuyen VanChuyen
		{
			get
			{
				return this._VanChuyen.Entity;
			}
			set
			{
				VanChuyen previousValue = this._VanChuyen.Entity;
				if (((previousValue != value) 
							|| (this._VanChuyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VanChuyen.Entity = null;
						previousValue.DonHang = null;
					}
					this._VanChuyen.Entity = value;
					if ((value != null))
					{
						value.DonHang = this;
					}
					this.SendPropertyChanged("VanChuyen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DonHang", Storage="_NguoiDung", ThisKey="NguoiDungId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._NguoiDungId = value.Id;
					}
					else
					{
						this._NguoiDungId = default(long);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaoHanhs(BaoHanh entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_BaoHanhs(BaoHanh entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
		
		private void attach_TrangThaiDonHangs(TrangThaiDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_TrangThaiDonHangs(TrangThaiDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HinhAnhSanPham")]
	public partial class HinhAnhSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _SanPhamId;
		
		private string _HinhAnhUrl;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSanPhamIdChanging(System.Nullable<long> value);
    partial void OnSanPhamIdChanged();
    partial void OnHinhAnhUrlChanging(string value);
    partial void OnHinhAnhUrlChanged();
    #endregion
		
		public HinhAnhSanPham()
		{
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamId", DbType="BigInt")]
		public System.Nullable<long> SanPhamId
		{
			get
			{
				return this._SanPhamId;
			}
			set
			{
				if ((this._SanPhamId != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIdChanging(value);
					this.SendPropertyChanging();
					this._SanPhamId = value;
					this.SendPropertyChanged("SanPhamId");
					this.OnSanPhamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnhUrl", DbType="VarChar(255)")]
		public string HinhAnhUrl
		{
			get
			{
				return this._HinhAnhUrl;
			}
			set
			{
				if ((this._HinhAnhUrl != value))
				{
					this.OnHinhAnhUrlChanging(value);
					this.SendPropertyChanging();
					this._HinhAnhUrl = value;
					this.SendPropertyChanged("HinhAnhUrl");
					this.OnHinhAnhUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_HinhAnhSanPham", Storage="_SanPham", ThisKey="SanPhamId", OtherKey="Id", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.HinhAnhSanPhams.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.HinhAnhSanPhams.Add(this);
						this._SanPhamId = value.Id;
					}
					else
					{
						this._SanPhamId = default(Nullable<long>);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuyenMai")]
	public partial class KhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _MaKhuyenMai;
		
		private System.Nullable<decimal> _TyLeGiam;
		
		private System.DateTime _NgayBatDau;
		
		private System.DateTime _NgayKetThuc;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnMaKhuyenMaiChanging(string value);
    partial void OnMaKhuyenMaiChanged();
    partial void OnTyLeGiamChanging(System.Nullable<decimal> value);
    partial void OnTyLeGiamChanged();
    partial void OnNgayBatDauChanging(System.DateTime value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.DateTime value);
    partial void OnNgayKetThucChanged();
    #endregion
		
		public KhuyenMai()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhuyenMai", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MaKhuyenMai
		{
			get
			{
				return this._MaKhuyenMai;
			}
			set
			{
				if ((this._MaKhuyenMai != value))
				{
					this.OnMaKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._MaKhuyenMai = value;
					this.SendPropertyChanged("MaKhuyenMai");
					this.OnMaKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TyLeGiam", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> TyLeGiam
		{
			get
			{
				return this._TyLeGiam;
			}
			set
			{
				if ((this._TyLeGiam != value))
				{
					this.OnTyLeGiamChanging(value);
					this.SendPropertyChanging();
					this._TyLeGiam = value;
					this.SendPropertyChanged("TyLeGiam");
					this.OnTyLeGiamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date NOT NULL")]
		public System.DateTime NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date NOT NULL")]
		public System.DateTime NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_SanPham", Storage="_SanPhams", ThisKey="Id", OtherKey="KhuyenMaiId")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinhKien")]
	public partial class LinhKien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _TenLinhKien;
		
		private EntitySet<MoTa> _MoTas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTenLinhKienChanging(string value);
    partial void OnTenLinhKienChanged();
    #endregion
		
		public LinhKien()
		{
			this._MoTas = new EntitySet<MoTa>(new Action<MoTa>(this.attach_MoTas), new Action<MoTa>(this.detach_MoTas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLinhKien", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenLinhKien
		{
			get
			{
				return this._TenLinhKien;
			}
			set
			{
				if ((this._TenLinhKien != value))
				{
					this.OnTenLinhKienChanging(value);
					this.SendPropertyChanging();
					this._TenLinhKien = value;
					this.SendPropertyChanged("TenLinhKien");
					this.OnTenLinhKienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LinhKien_MoTa", Storage="_MoTas", ThisKey="Id", OtherKey="LinhKienId")]
		public EntitySet<MoTa> MoTas
		{
			get
			{
				return this._MoTas;
			}
			set
			{
				this._MoTas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MoTas(MoTa entity)
		{
			this.SendPropertyChanging();
			entity.LinhKien = this;
		}
		
		private void detach_MoTas(MoTa entity)
		{
			this.SendPropertyChanging();
			entity.LinhKien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSanPham")]
	public partial class LoaiSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _TenLoai;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiSanPham()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_SanPhams", ThisKey="Id", OtherKey="LoaiSanPhamId")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoTa")]
	public partial class MoTa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _NoiDung;
		
		private System.Nullable<long> _LinhKienId;
		
		private EntitySet<MoTaSanPham> _MoTaSanPhams;
		
		private EntityRef<LinhKien> _LinhKien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnLinhKienIdChanging(System.Nullable<long> value);
    partial void OnLinhKienIdChanged();
    #endregion
		
		public MoTa()
		{
			this._MoTaSanPhams = new EntitySet<MoTaSanPham>(new Action<MoTaSanPham>(this.attach_MoTaSanPhams), new Action<MoTaSanPham>(this.detach_MoTaSanPhams));
			this._LinhKien = default(EntityRef<LinhKien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinhKienId", DbType="BigInt")]
		public System.Nullable<long> LinhKienId
		{
			get
			{
				return this._LinhKienId;
			}
			set
			{
				if ((this._LinhKienId != value))
				{
					if (this._LinhKien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLinhKienIdChanging(value);
					this.SendPropertyChanging();
					this._LinhKienId = value;
					this.SendPropertyChanged("LinhKienId");
					this.OnLinhKienIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MoTa_MoTaSanPham", Storage="_MoTaSanPhams", ThisKey="Id", OtherKey="MoTaId")]
		public EntitySet<MoTaSanPham> MoTaSanPhams
		{
			get
			{
				return this._MoTaSanPhams;
			}
			set
			{
				this._MoTaSanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LinhKien_MoTa", Storage="_LinhKien", ThisKey="LinhKienId", OtherKey="Id", IsForeignKey=true)]
		public LinhKien LinhKien
		{
			get
			{
				return this._LinhKien.Entity;
			}
			set
			{
				LinhKien previousValue = this._LinhKien.Entity;
				if (((previousValue != value) 
							|| (this._LinhKien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LinhKien.Entity = null;
						previousValue.MoTas.Remove(this);
					}
					this._LinhKien.Entity = value;
					if ((value != null))
					{
						value.MoTas.Add(this);
						this._LinhKienId = value.Id;
					}
					else
					{
						this._LinhKienId = default(Nullable<long>);
					}
					this.SendPropertyChanged("LinhKien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MoTaSanPhams(MoTaSanPham entity)
		{
			this.SendPropertyChanging();
			entity.MoTa = this;
		}
		
		private void detach_MoTaSanPhams(MoTaSanPham entity)
		{
			this.SendPropertyChanging();
			entity.MoTa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoTaSanPham")]
	public partial class MoTaSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _SanPhamId;
		
		private long _MoTaId;
		
		private EntityRef<MoTa> _MoTa;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSanPhamIdChanging(long value);
    partial void OnSanPhamIdChanged();
    partial void OnMoTaIdChanging(long value);
    partial void OnMoTaIdChanged();
    #endregion
		
		public MoTaSanPham()
		{
			this._MoTa = default(EntityRef<MoTa>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamId", DbType="BigInt NOT NULL")]
		public long SanPhamId
		{
			get
			{
				return this._SanPhamId;
			}
			set
			{
				if ((this._SanPhamId != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIdChanging(value);
					this.SendPropertyChanging();
					this._SanPhamId = value;
					this.SendPropertyChanged("SanPhamId");
					this.OnSanPhamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaId", DbType="BigInt NOT NULL")]
		public long MoTaId
		{
			get
			{
				return this._MoTaId;
			}
			set
			{
				if ((this._MoTaId != value))
				{
					if (this._MoTa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMoTaIdChanging(value);
					this.SendPropertyChanging();
					this._MoTaId = value;
					this.SendPropertyChanged("MoTaId");
					this.OnMoTaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MoTa_MoTaSanPham", Storage="_MoTa", ThisKey="MoTaId", OtherKey="Id", IsForeignKey=true)]
		public MoTa MoTa
		{
			get
			{
				return this._MoTa.Entity;
			}
			set
			{
				MoTa previousValue = this._MoTa.Entity;
				if (((previousValue != value) 
							|| (this._MoTa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MoTa.Entity = null;
						previousValue.MoTaSanPhams.Remove(this);
					}
					this._MoTa.Entity = value;
					if ((value != null))
					{
						value.MoTaSanPhams.Add(this);
						this._MoTaId = value.Id;
					}
					else
					{
						this._MoTaId = default(long);
					}
					this.SendPropertyChanged("MoTa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_MoTaSanPham", Storage="_SanPham", ThisKey="SanPhamId", OtherKey="Id", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.MoTaSanPhams.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.MoTaSanPhams.Add(this);
						this._SanPhamId = value.Id;
					}
					else
					{
						this._SanPhamId = default(long);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private string _Email;
		
		private string _HoTen;
		
		private string _SoDienThoai;
		
		private string _DiaChi;
		
		private string _HinhDaiDien;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private EntitySet<DanhGia> _DanhGias;
		
		private EntitySet<DonHang> _DonHangs;
		
		private EntitySet<SanPhamYeuThich> _SanPhamYeuThiches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnHinhDaiDienChanging(string value);
    partial void OnHinhDaiDienChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public NguoiDung()
		{
			this._DanhGias = new EntitySet<DanhGia>(new Action<DanhGia>(this.attach_DanhGias), new Action<DanhGia>(this.detach_DanhGias));
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			this._SanPhamYeuThiches = new EntitySet<SanPhamYeuThich>(new Action<SanPhamYeuThich>(this.attach_SanPhamYeuThiches), new Action<SanPhamYeuThich>(this.detach_SanPhamYeuThiches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhDaiDien", DbType="VarChar(255)")]
		public string HinhDaiDien
		{
			get
			{
				return this._HinhDaiDien;
			}
			set
			{
				if ((this._HinhDaiDien != value))
				{
					this.OnHinhDaiDienChanging(value);
					this.SendPropertyChanging();
					this._HinhDaiDien = value;
					this.SendPropertyChanged("HinhDaiDien");
					this.OnHinhDaiDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DanhGia", Storage="_DanhGias", ThisKey="Id", OtherKey="NguoiDungId")]
		public EntitySet<DanhGia> DanhGias
		{
			get
			{
				return this._DanhGias;
			}
			set
			{
				this._DanhGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DonHang", Storage="_DonHangs", ThisKey="Id", OtherKey="NguoiDungId")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_SanPhamYeuThich", Storage="_SanPhamYeuThiches", ThisKey="Id", OtherKey="NguoiDungId")]
		public EntitySet<SanPhamYeuThich> SanPhamYeuThiches
		{
			get
			{
				return this._SanPhamYeuThiches;
			}
			set
			{
				this._SanPhamYeuThiches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_SanPhamYeuThiches(SanPhamYeuThich entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_SanPhamYeuThiches(SanPhamYeuThich entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanKhuc")]
	public partial class PhanKhuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _TenPhanKhuc;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTenPhanKhucChanging(string value);
    partial void OnTenPhanKhucChanged();
    #endregion
		
		public PhanKhuc()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhanKhuc", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenPhanKhuc
		{
			get
			{
				return this._TenPhanKhuc;
			}
			set
			{
				if ((this._TenPhanKhuc != value))
				{
					this.OnTenPhanKhucChanging(value);
					this.SendPropertyChanging();
					this._TenPhanKhuc = value;
					this.SendPropertyChanged("TenPhanKhuc");
					this.OnTenPhanKhucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhanKhuc_SanPham", Storage="_SanPhams", ThisKey="Id", OtherKey="PhanKhucId")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.PhanKhuc = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.PhanKhuc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuanTriVien")]
	public partial class QuanTriVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public QuanTriVien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _TenSanPham;
		
		private string _TieuDe;
		
		private decimal _Gia;
		
		private System.Nullable<int> _SoLuong;
		
		private long _LoaiSanPhamId;
		
		private long _ThuongHieuId;
		
		private long _PhanKhucId;
		
		private System.Nullable<long> _KhuyenMaiId;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private EntitySet<BaoHanh> _BaoHanhs;
		
		private EntitySet<DanhGia> _DanhGias;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntitySet<HinhAnhSanPham> _HinhAnhSanPhams;
		
		private EntitySet<MoTaSanPham> _MoTaSanPhams;
		
		private EntitySet<SanPhamYeuThich> _SanPhamYeuThiches;
		
		private EntityRef<KhuyenMai> _KhuyenMai;
		
		private EntityRef<LoaiSanPham> _LoaiSanPham;
		
		private EntityRef<PhanKhuc> _PhanKhuc;
		
		private EntityRef<ThuongHieu> _ThuongHieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnGiaChanging(decimal value);
    partial void OnGiaChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnLoaiSanPhamIdChanging(long value);
    partial void OnLoaiSanPhamIdChanged();
    partial void OnThuongHieuIdChanging(long value);
    partial void OnThuongHieuIdChanged();
    partial void OnPhanKhucIdChanging(long value);
    partial void OnPhanKhucIdChanged();
    partial void OnKhuyenMaiIdChanging(System.Nullable<long> value);
    partial void OnKhuyenMaiIdChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    #endregion
		
		public SanPham()
		{
			this._BaoHanhs = new EntitySet<BaoHanh>(new Action<BaoHanh>(this.attach_BaoHanhs), new Action<BaoHanh>(this.detach_BaoHanhs));
			this._DanhGias = new EntitySet<DanhGia>(new Action<DanhGia>(this.attach_DanhGias), new Action<DanhGia>(this.detach_DanhGias));
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._HinhAnhSanPhams = new EntitySet<HinhAnhSanPham>(new Action<HinhAnhSanPham>(this.attach_HinhAnhSanPhams), new Action<HinhAnhSanPham>(this.detach_HinhAnhSanPhams));
			this._MoTaSanPhams = new EntitySet<MoTaSanPham>(new Action<MoTaSanPham>(this.attach_MoTaSanPhams), new Action<MoTaSanPham>(this.detach_MoTaSanPhams));
			this._SanPhamYeuThiches = new EntitySet<SanPhamYeuThich>(new Action<SanPhamYeuThich>(this.attach_SanPhamYeuThiches), new Action<SanPhamYeuThich>(this.detach_SanPhamYeuThiches));
			this._KhuyenMai = default(EntityRef<KhuyenMai>);
			this._LoaiSanPham = default(EntityRef<LoaiSanPham>);
			this._PhanKhuc = default(EntityRef<PhanKhuc>);
			this._ThuongHieu = default(EntityRef<ThuongHieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(10,2) NOT NULL")]
		public decimal Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiSanPhamId", DbType="BigInt NOT NULL")]
		public long LoaiSanPhamId
		{
			get
			{
				return this._LoaiSanPhamId;
			}
			set
			{
				if ((this._LoaiSanPhamId != value))
				{
					if (this._LoaiSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiSanPhamIdChanging(value);
					this.SendPropertyChanging();
					this._LoaiSanPhamId = value;
					this.SendPropertyChanged("LoaiSanPhamId");
					this.OnLoaiSanPhamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuongHieuId", DbType="BigInt NOT NULL")]
		public long ThuongHieuId
		{
			get
			{
				return this._ThuongHieuId;
			}
			set
			{
				if ((this._ThuongHieuId != value))
				{
					if (this._ThuongHieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThuongHieuIdChanging(value);
					this.SendPropertyChanging();
					this._ThuongHieuId = value;
					this.SendPropertyChanged("ThuongHieuId");
					this.OnThuongHieuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanKhucId", DbType="BigInt NOT NULL")]
		public long PhanKhucId
		{
			get
			{
				return this._PhanKhucId;
			}
			set
			{
				if ((this._PhanKhucId != value))
				{
					if (this._PhanKhuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhanKhucIdChanging(value);
					this.SendPropertyChanging();
					this._PhanKhucId = value;
					this.SendPropertyChanged("PhanKhucId");
					this.OnPhanKhucIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhuyenMaiId", DbType="BigInt")]
		public System.Nullable<long> KhuyenMaiId
		{
			get
			{
				return this._KhuyenMaiId;
			}
			set
			{
				if ((this._KhuyenMaiId != value))
				{
					if (this._KhuyenMai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhuyenMaiIdChanging(value);
					this.SendPropertyChanging();
					this._KhuyenMaiId = value;
					this.SendPropertyChanged("KhuyenMaiId");
					this.OnKhuyenMaiIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BaoHanh", Storage="_BaoHanhs", ThisKey="Id", OtherKey="SanPhamId")]
		public EntitySet<BaoHanh> BaoHanhs
		{
			get
			{
				return this._BaoHanhs;
			}
			set
			{
				this._BaoHanhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_DanhGia", Storage="_DanhGias", ThisKey="Id", OtherKey="SanPhamId")]
		public EntitySet<DanhGia> DanhGias
		{
			get
			{
				return this._DanhGias;
			}
			set
			{
				this._DanhGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="Id", OtherKey="SanPhamId")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_HinhAnhSanPham", Storage="_HinhAnhSanPhams", ThisKey="Id", OtherKey="SanPhamId")]
		public EntitySet<HinhAnhSanPham> HinhAnhSanPhams
		{
			get
			{
				return this._HinhAnhSanPhams;
			}
			set
			{
				this._HinhAnhSanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_MoTaSanPham", Storage="_MoTaSanPhams", ThisKey="Id", OtherKey="SanPhamId")]
		public EntitySet<MoTaSanPham> MoTaSanPhams
		{
			get
			{
				return this._MoTaSanPhams;
			}
			set
			{
				this._MoTaSanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_SanPhamYeuThich", Storage="_SanPhamYeuThiches", ThisKey="Id", OtherKey="SanPhamId")]
		public EntitySet<SanPhamYeuThich> SanPhamYeuThiches
		{
			get
			{
				return this._SanPhamYeuThiches;
			}
			set
			{
				this._SanPhamYeuThiches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_SanPham", Storage="_KhuyenMai", ThisKey="KhuyenMaiId", OtherKey="Id", IsForeignKey=true)]
		public KhuyenMai KhuyenMai
		{
			get
			{
				return this._KhuyenMai.Entity;
			}
			set
			{
				KhuyenMai previousValue = this._KhuyenMai.Entity;
				if (((previousValue != value) 
							|| (this._KhuyenMai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhuyenMai.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._KhuyenMai.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._KhuyenMaiId = value.Id;
					}
					else
					{
						this._KhuyenMaiId = default(Nullable<long>);
					}
					this.SendPropertyChanged("KhuyenMai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_LoaiSanPham", ThisKey="LoaiSanPhamId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LoaiSanPham LoaiSanPham
		{
			get
			{
				return this._LoaiSanPham.Entity;
			}
			set
			{
				LoaiSanPham previousValue = this._LoaiSanPham.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSanPham.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._LoaiSanPham.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._LoaiSanPhamId = value.Id;
					}
					else
					{
						this._LoaiSanPhamId = default(long);
					}
					this.SendPropertyChanged("LoaiSanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhanKhuc_SanPham", Storage="_PhanKhuc", ThisKey="PhanKhucId", OtherKey="Id", IsForeignKey=true)]
		public PhanKhuc PhanKhuc
		{
			get
			{
				return this._PhanKhuc.Entity;
			}
			set
			{
				PhanKhuc previousValue = this._PhanKhuc.Entity;
				if (((previousValue != value) 
							|| (this._PhanKhuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhanKhuc.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._PhanKhuc.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._PhanKhucId = value.Id;
					}
					else
					{
						this._PhanKhucId = default(long);
					}
					this.SendPropertyChanged("PhanKhuc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieu_SanPham", Storage="_ThuongHieu", ThisKey="ThuongHieuId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ThuongHieu ThuongHieu
		{
			get
			{
				return this._ThuongHieu.Entity;
			}
			set
			{
				ThuongHieu previousValue = this._ThuongHieu.Entity;
				if (((previousValue != value) 
							|| (this._ThuongHieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuongHieu.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._ThuongHieu.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._ThuongHieuId = value.Id;
					}
					else
					{
						this._ThuongHieuId = default(long);
					}
					this.SendPropertyChanged("ThuongHieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaoHanhs(BaoHanh entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_BaoHanhs(BaoHanh entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_HinhAnhSanPhams(HinhAnhSanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_HinhAnhSanPhams(HinhAnhSanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_MoTaSanPhams(MoTaSanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_MoTaSanPhams(MoTaSanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_SanPhamYeuThiches(SanPhamYeuThich entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_SanPhamYeuThiches(SanPhamYeuThich entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPhamYeuThich")]
	public partial class SanPhamYeuThich : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _NguoiDungId;
		
		private long _SanPhamId;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNguoiDungIdChanging(long value);
    partial void OnNguoiDungIdChanged();
    partial void OnSanPhamIdChanging(long value);
    partial void OnSanPhamIdChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public SanPhamYeuThich()
		{
			this._NguoiDung = default(EntityRef<NguoiDung>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDungId", DbType="BigInt NOT NULL")]
		public long NguoiDungId
		{
			get
			{
				return this._NguoiDungId;
			}
			set
			{
				if ((this._NguoiDungId != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiDungIdChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungId = value;
					this.SendPropertyChanged("NguoiDungId");
					this.OnNguoiDungIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamId", DbType="BigInt NOT NULL")]
		public long SanPhamId
		{
			get
			{
				return this._SanPhamId;
			}
			set
			{
				if ((this._SanPhamId != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIdChanging(value);
					this.SendPropertyChanging();
					this._SanPhamId = value;
					this.SendPropertyChanged("SanPhamId");
					this.OnSanPhamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_SanPhamYeuThich", Storage="_NguoiDung", ThisKey="NguoiDungId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.SanPhamYeuThiches.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.SanPhamYeuThiches.Add(this);
						this._NguoiDungId = value.Id;
					}
					else
					{
						this._NguoiDungId = default(long);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_SanPhamYeuThich", Storage="_SanPham", ThisKey="SanPhamId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.SanPhamYeuThiches.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.SanPhamYeuThiches.Add(this);
						this._SanPhamId = value.Id;
					}
					else
					{
						this._SanPhamId = default(long);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThuongHieu")]
	public partial class ThuongHieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _TenThuongHieu;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTenThuongHieuChanging(string value);
    partial void OnTenThuongHieuChanged();
    #endregion
		
		public ThuongHieu()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThuongHieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenThuongHieu
		{
			get
			{
				return this._TenThuongHieu;
			}
			set
			{
				if ((this._TenThuongHieu != value))
				{
					this.OnTenThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._TenThuongHieu = value;
					this.SendPropertyChanged("TenThuongHieu");
					this.OnTenThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieu_SanPham", Storage="_SanPhams", ThisKey="Id", OtherKey="ThuongHieuId")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.ThuongHieu = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.ThuongHieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThanhToan")]
	public partial class ThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _PhuongThucThanhToan;
		
		private string _TrangThaiThanhToan;
		
		private System.Nullable<System.DateTime> _NgayThanhToan;
		
		private EntityRef<DonHang> _DonHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPhuongThucThanhToanChanging(string value);
    partial void OnPhuongThucThanhToanChanged();
    partial void OnTrangThaiThanhToanChanging(string value);
    partial void OnTrangThaiThanhToanChanged();
    partial void OnNgayThanhToanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThanhToanChanged();
    #endregion
		
		public ThanhToan()
		{
			this._DonHang = default(EntityRef<DonHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuongThucThanhToan", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PhuongThucThanhToan
		{
			get
			{
				return this._PhuongThucThanhToan;
			}
			set
			{
				if ((this._PhuongThucThanhToan != value))
				{
					this.OnPhuongThucThanhToanChanging(value);
					this.SendPropertyChanging();
					this._PhuongThucThanhToan = value;
					this.SendPropertyChanged("PhuongThucThanhToan");
					this.OnPhuongThucThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiThanhToan", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TrangThaiThanhToan
		{
			get
			{
				return this._TrangThaiThanhToan;
			}
			set
			{
				if ((this._TrangThaiThanhToan != value))
				{
					this.OnTrangThaiThanhToanChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiThanhToan = value;
					this.SendPropertyChanged("TrangThaiThanhToan");
					this.OnTrangThaiThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThanhToan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayThanhToan
		{
			get
			{
				return this._NgayThanhToan;
			}
			set
			{
				if ((this._NgayThanhToan != value))
				{
					this.OnNgayThanhToanChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhToan = value;
					this.SendPropertyChanged("NgayThanhToan");
					this.OnNgayThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ThanhToan", Storage="_DonHang", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.ThanhToan = null;
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.ThanhToan = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(long);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TinhTrangDonHang")]
	public partial class TinhTrangDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _NoiDung;
		
		private EntitySet<TrangThaiDonHang> _TrangThaiDonHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    #endregion
		
		public TinhTrangDonHang()
		{
			this._TrangThaiDonHangs = new EntitySet<TrangThaiDonHang>(new Action<TrangThaiDonHang>(this.attach_TrangThaiDonHangs), new Action<TrangThaiDonHang>(this.detach_TrangThaiDonHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhTrangDonHang_TrangThaiDonHang", Storage="_TrangThaiDonHangs", ThisKey="Id", OtherKey="TinhTrangDonHangId")]
		public EntitySet<TrangThaiDonHang> TrangThaiDonHangs
		{
			get
			{
				return this._TrangThaiDonHangs;
			}
			set
			{
				this._TrangThaiDonHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrangThaiDonHangs(TrangThaiDonHang entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrangDonHang = this;
		}
		
		private void detach_TrangThaiDonHangs(TrangThaiDonHang entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrangDonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TinhTrangVanChuyen")]
	public partial class TinhTrangVanChuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _NoiDung;
		
		private EntitySet<TrangThaiVanChuyen> _TrangThaiVanChuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    #endregion
		
		public TinhTrangVanChuyen()
		{
			this._TrangThaiVanChuyens = new EntitySet<TrangThaiVanChuyen>(new Action<TrangThaiVanChuyen>(this.attach_TrangThaiVanChuyens), new Action<TrangThaiVanChuyen>(this.detach_TrangThaiVanChuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhTrangVanChuyen_TrangThaiVanChuyen", Storage="_TrangThaiVanChuyens", ThisKey="Id", OtherKey="TinhTrangVanChuyenId")]
		public EntitySet<TrangThaiVanChuyen> TrangThaiVanChuyens
		{
			get
			{
				return this._TrangThaiVanChuyens;
			}
			set
			{
				this._TrangThaiVanChuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrangThaiVanChuyens(TrangThaiVanChuyen entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrangVanChuyen = this;
		}
		
		private void detach_TrangThaiVanChuyens(TrangThaiVanChuyen entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrangVanChuyen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrangThaiDonHang")]
	public partial class TrangThaiDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _DonHangId;
		
		private long _TinhTrangDonHangId;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<TinhTrangDonHang> _TinhTrangDonHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonHangIdChanging(long value);
    partial void OnDonHangIdChanged();
    partial void OnTinhTrangDonHangIdChanging(long value);
    partial void OnTinhTrangDonHangIdChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public TrangThaiDonHang()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._TinhTrangDonHang = default(EntityRef<TinhTrangDonHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonHangId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DonHangId
		{
			get
			{
				return this._DonHangId;
			}
			set
			{
				if ((this._DonHangId != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonHangIdChanging(value);
					this.SendPropertyChanging();
					this._DonHangId = value;
					this.SendPropertyChanged("DonHangId");
					this.OnDonHangIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangDonHangId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long TinhTrangDonHangId
		{
			get
			{
				return this._TinhTrangDonHangId;
			}
			set
			{
				if ((this._TinhTrangDonHangId != value))
				{
					if (this._TinhTrangDonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTinhTrangDonHangIdChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangDonHangId = value;
					this.SendPropertyChanged("TinhTrangDonHangId");
					this.OnTinhTrangDonHangIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_TrangThaiDonHang", Storage="_DonHang", ThisKey="DonHangId", OtherKey="Id", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.TrangThaiDonHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.TrangThaiDonHangs.Add(this);
						this._DonHangId = value.Id;
					}
					else
					{
						this._DonHangId = default(long);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhTrangDonHang_TrangThaiDonHang", Storage="_TinhTrangDonHang", ThisKey="TinhTrangDonHangId", OtherKey="Id", IsForeignKey=true)]
		public TinhTrangDonHang TinhTrangDonHang
		{
			get
			{
				return this._TinhTrangDonHang.Entity;
			}
			set
			{
				TinhTrangDonHang previousValue = this._TinhTrangDonHang.Entity;
				if (((previousValue != value) 
							|| (this._TinhTrangDonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhTrangDonHang.Entity = null;
						previousValue.TrangThaiDonHangs.Remove(this);
					}
					this._TinhTrangDonHang.Entity = value;
					if ((value != null))
					{
						value.TrangThaiDonHangs.Add(this);
						this._TinhTrangDonHangId = value.Id;
					}
					else
					{
						this._TinhTrangDonHangId = default(long);
					}
					this.SendPropertyChanged("TinhTrangDonHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrangThaiVanChuyen")]
	public partial class TrangThaiVanChuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _VanChuyenId;
		
		private long _TinhTrangVanChuyenId;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private EntityRef<TinhTrangVanChuyen> _TinhTrangVanChuyen;
		
		private EntityRef<VanChuyen> _VanChuyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVanChuyenIdChanging(long value);
    partial void OnVanChuyenIdChanged();
    partial void OnTinhTrangVanChuyenIdChanging(long value);
    partial void OnTinhTrangVanChuyenIdChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public TrangThaiVanChuyen()
		{
			this._TinhTrangVanChuyen = default(EntityRef<TinhTrangVanChuyen>);
			this._VanChuyen = default(EntityRef<VanChuyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VanChuyenId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long VanChuyenId
		{
			get
			{
				return this._VanChuyenId;
			}
			set
			{
				if ((this._VanChuyenId != value))
				{
					if (this._VanChuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVanChuyenIdChanging(value);
					this.SendPropertyChanging();
					this._VanChuyenId = value;
					this.SendPropertyChanged("VanChuyenId");
					this.OnVanChuyenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangVanChuyenId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long TinhTrangVanChuyenId
		{
			get
			{
				return this._TinhTrangVanChuyenId;
			}
			set
			{
				if ((this._TinhTrangVanChuyenId != value))
				{
					if (this._TinhTrangVanChuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTinhTrangVanChuyenIdChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangVanChuyenId = value;
					this.SendPropertyChanged("TinhTrangVanChuyenId");
					this.OnTinhTrangVanChuyenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhTrangVanChuyen_TrangThaiVanChuyen", Storage="_TinhTrangVanChuyen", ThisKey="TinhTrangVanChuyenId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TinhTrangVanChuyen TinhTrangVanChuyen
		{
			get
			{
				return this._TinhTrangVanChuyen.Entity;
			}
			set
			{
				TinhTrangVanChuyen previousValue = this._TinhTrangVanChuyen.Entity;
				if (((previousValue != value) 
							|| (this._TinhTrangVanChuyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhTrangVanChuyen.Entity = null;
						previousValue.TrangThaiVanChuyens.Remove(this);
					}
					this._TinhTrangVanChuyen.Entity = value;
					if ((value != null))
					{
						value.TrangThaiVanChuyens.Add(this);
						this._TinhTrangVanChuyenId = value.Id;
					}
					else
					{
						this._TinhTrangVanChuyenId = default(long);
					}
					this.SendPropertyChanged("TinhTrangVanChuyen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VanChuyen_TrangThaiVanChuyen", Storage="_VanChuyen", ThisKey="VanChuyenId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public VanChuyen VanChuyen
		{
			get
			{
				return this._VanChuyen.Entity;
			}
			set
			{
				VanChuyen previousValue = this._VanChuyen.Entity;
				if (((previousValue != value) 
							|| (this._VanChuyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VanChuyen.Entity = null;
						previousValue.TrangThaiVanChuyens.Remove(this);
					}
					this._VanChuyen.Entity = value;
					if ((value != null))
					{
						value.TrangThaiVanChuyens.Add(this);
						this._VanChuyenId = value.Id;
					}
					else
					{
						this._VanChuyenId = default(long);
					}
					this.SendPropertyChanged("VanChuyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VanChuyen")]
	public partial class VanChuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private System.DateTime _NgayGiaoHang;
		
		private EntitySet<TrangThaiVanChuyen> _TrangThaiVanChuyens;
		
		private EntityRef<DonHang> _DonHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnNgayGiaoHangChanging(System.DateTime value);
    partial void OnNgayGiaoHangChanged();
    #endregion
		
		public VanChuyen()
		{
			this._TrangThaiVanChuyens = new EntitySet<TrangThaiVanChuyen>(new Action<TrangThaiVanChuyen>(this.attach_TrangThaiVanChuyens), new Action<TrangThaiVanChuyen>(this.detach_TrangThaiVanChuyens));
			this._DonHang = default(EntityRef<DonHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(20)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiaoHang", DbType="DateTime NOT NULL")]
		public System.DateTime NgayGiaoHang
		{
			get
			{
				return this._NgayGiaoHang;
			}
			set
			{
				if ((this._NgayGiaoHang != value))
				{
					this.OnNgayGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._NgayGiaoHang = value;
					this.SendPropertyChanged("NgayGiaoHang");
					this.OnNgayGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VanChuyen_TrangThaiVanChuyen", Storage="_TrangThaiVanChuyens", ThisKey="Id", OtherKey="VanChuyenId")]
		public EntitySet<TrangThaiVanChuyen> TrangThaiVanChuyens
		{
			get
			{
				return this._TrangThaiVanChuyens;
			}
			set
			{
				this._TrangThaiVanChuyens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_VanChuyen", Storage="_DonHang", ThisKey="Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.VanChuyen = null;
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.VanChuyen = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(long);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrangThaiVanChuyens(TrangThaiVanChuyen entity)
		{
			this.SendPropertyChanging();
			entity.VanChuyen = this;
		}
		
		private void detach_TrangThaiVanChuyens(TrangThaiVanChuyen entity)
		{
			this.SendPropertyChanging();
			entity.VanChuyen = null;
		}
	}
}
#pragma warning restore 1591
